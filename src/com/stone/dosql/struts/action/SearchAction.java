/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.stone.dosql.struts.action;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;

import com.stone.dosql.face.Face;
import com.stone.dosql.struts.form.SearchForm;
import com.stone.dosql.struts.util.JspConst;
import com.stone.dosql.struts.util.JspNavigator;
import com.stone.dosql.struts.util.JspResult;

/** 
 * MyEclipse Struts
 * Creation date: 06-09-2008
 * 
 * XDoclet definition:
 * @struts.action path="/search" name="searchForm" input="/dosql/search.jsp" scope="request" validate="true"
 * @struts.action-forward name="show" path="/dosql/show.jsp"
 */
public class SearchAction extends Action {
	private  String showUrl;  //显示中间代码，token代码的地址
	private  JspNavigator jn;
	private String actionPath="/search.do";
	/*
	 * Generated Methods
	 */

	/** 
	 * Method execute
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward execute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		try {
			this.showUrl=(String)request.getContextPath()+this.actionPath;
			//System.out.println(this.showUrl+"  this.showURl");
			String type=(String)request.getParameter("type");
			
			if(type==null||type.length()==0){
				SearchForm searchForm = (SearchForm) form;// TODO Auto-generated method stub
				String dbName=searchForm.getDbname().trim();
				request.getSession().setAttribute("dbName", dbName);  //当前选择的数据库
				String selectString=searchForm.getSelectString().trim();
				request.getSession().setAttribute("selectString", selectString);  //保存当前的查询语句
				if(selectString==null||selectString.length()==0){
			    	request.setAttribute("err", "请输入查询语句!");
			    	return mapping.findForward("err");
				}else{
					String serverUrl=(String)request.getRealPath("/");
					Face face=new Face(serverUrl,dbName,selectString);
					
					//错误
					if(face.getSelectError()!=null&&face.getSelectError().length()>0){
						//System.out.println("err sdf sd fsd fs "+face.getSelectError());
						request.setAttribute("err", face.getSelectError());
						return mapping.findForward("err");
					}else{  //没有错误
						//System.out.println("good!");
						JspResult jspResult=new JspResult(face,dbName,selectString);
						request.getSession().setAttribute("jspResult", jspResult);
						this.jn=new JspNavigator(this.showUrl);
						request.getSession().setAttribute("navigator", this.jn);
						
						return mapping.findForward("show");
					}
				}
				

			}else{
				//显示tokens
				boolean isYes=true;
				if(type.equals(JspConst.href_tokens)){
				    try{
				        JspResult jspResult=(JspResult)request.getSession().getAttribute("jspResult");
				        jspResult.setJspResultShowType(JspConst.ShowTokens);
				        request.getSession().setAttribute("jspResult", jspResult);
				    }catch(Exception e){
				    	isYes=false;	
				    }
					
				    //显示中间代码
				}else if(type.equals(JspConst.href_middlecodes)){
				    try{
				        JspResult jspResult=(JspResult)request.getSession().getAttribute("jspResult");
				        jspResult.setJspResultShowType(JspConst.ShowMiddleCodes);
				        request.getSession().setAttribute("jspResult", jspResult);
				    }catch(Exception e){
				    	isYes=false;
				    }
				    //默认显示
				}else if(type.equals(JspConst.href_resultset)){
				    try{
				        JspResult jspResult=(JspResult)request.getSession().getAttribute("jspResult");
				        jspResult.setJspResultShowType(JspConst.ShowResulstSet);
				        request.getSession().setAttribute("jspResult", jspResult);
				    }catch(Exception e){
				    	isYes=false;

				    }
				}else{
					isYes=false;
				}
				if(isYes){
					return mapping.findForward("show");
				}else{
			    	request.setAttribute("err", "请正确操作!");
			    	return mapping.findForward("err");
				}
				
			}
		} catch (RuntimeException e) {
	    	request.setAttribute("err", "请正确操作!");
	    	return mapping.findForward("err");
		}
		

		
		
		
		
	}
}